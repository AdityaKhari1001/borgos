version: '3.8'

# Optimized Docker Compose for 192.168.100.159
services:
  # BorgOS Dashboard
  dashboard:
    image: borgos/dashboard:latest
    container_name: borgos-dashboard
    ports:
      - "8080:8080"
    environment:
      - FLASK_ENV=production
      - SECRET_KEY=${SECRET_KEY}
      - REMOTE_HOST=192.168.100.159
    volumes:
      - ./config:/etc/borgos
      - borgos-data:/var/lib/borgos
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - borgos-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/"]
      interval: 30s
      timeout: 3s
      retries: 3

  # BorgOS Website  
  website:
    image: borgos/website:latest
    container_name: borgos-website
    ports:
      - "8000:80"  # Changed to 8000 to avoid conflicts
    networks:
      - borgos-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost/"]
      interval: 30s
      timeout: 3s
      retries: 3

  # Ollama for AI models (lighter config for remote)
  ollama:
    image: ollama/ollama:latest
    container_name: borgos-ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama-data:/root/.ollama
    networks:
      - borgos-network
    restart: unless-stopped
    environment:
      - OLLAMA_HOST=0.0.0.0
    deploy:
      resources:
        limits:
          memory: 4G
        reservations:
          memory: 2G

  # PostgreSQL Database (lighter config)
  postgres:
    image: postgres:15-alpine
    container_name: borgos-postgres
    environment:
      - POSTGRES_USER=borgos
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=borgos
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - borgos-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M

  # Redis for caching
  redis:
    image: redis:7-alpine
    container_name: borgos-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - borgos-network
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    deploy:
      resources:
        limits:
          memory: 256M

  # nginx reverse proxy (simplified)
  nginx:
    image: nginx:alpine
    container_name: borgos-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./deploy/nginx-remote.conf:/etc/nginx/conf.d/default.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    networks:
      - borgos-network
    restart: unless-stopped
    depends_on:
      - dashboard
      - website

  # ChromaDB vector database (optional - can be disabled if not needed)
  chromadb:
    image: chromadb/chroma:latest
    container_name: borgos-chromadb
    ports:
      - "8001:8000"  # Changed port to avoid conflicts
    volumes:
      - chroma-data:/chroma/chroma
    environment:
      - IS_PERSISTENT=TRUE
      - PERSIST_DIRECTORY=/chroma/chroma
      - ANONYMIZED_TELEMETRY=FALSE
    networks:
      - borgos-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1G

networks:
  borgos-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  borgos-data:
    driver: local
  ollama-data:
    driver: local
  postgres-data:
    driver: local
  redis-data:
    driver: local
  chroma-data:
    driver: local